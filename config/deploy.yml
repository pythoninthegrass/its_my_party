service: <%= ENV['SERVICE'] %>

image:
  - <%= ENV['USER_NAME'] %>/<%= ENV['SERVICE'] %>

builder:
  context: .
  dockerfile: Dockerfile
  local:
    arch: arm64
    host: unix:///Users/<%= `whoami`.strip %>/.docker/run/docker.sock
  # remote:
  #   arch: amd64
  #   host: ssh://<%= ENV['SSH_USER'] %>@192.168.8.150
  # cache:
  #   # type: gha
  # secrets:
  #   - GITHUB_TOKEN

registry:
  server: <%= ENV['REGISTRY_URL'] %>
  username: <%= ENV['USER_NAME'] %>
  password:
    - KAMAL_REGISTRY_PASSWORD


servers:
  web:
    hosts:
      - <%= File.read('config/hosts').split("\n").reject { |line| line.start_with?('#') } %>
    options:
      network: <%= ENV['NETWORK'] %>
    port: 8000:8000
    labels:
      traefik.http.routers.service-name.entrypoints: websecure
      traefik.http.routers.service-name.rule:
        - Host(`<%= ENV['FQDN'] %>`)
      traefik.http.routers.service-name.tls: true
      traefik.http.routers.service-name.tls.certresolver: letsencrypt

# nginx docker-proxy listening on 80
# traefik:
#   host_port: 8888

ssh:
  user: <%= ENV['SSH_USER'] %>

primary_role: web

healthcheck:
  cord: /tmp/kamal-cord
  path: /up
  port: <%= ENV['PORT'] %>
  max_attempts: 30
  interval: 300s
  log_lines: 100

# rolling deployments
boot:
  limit: 10 # default:10 (also percent: "25%")
  wait: 2

# TODO: debug `entryPoint web: ... listen tcp: address 80: missing port in address`
traefik:
  # host_port: 8080
  # publish:
  #     - 8080:8080
  publish: false
  options:
    network: <%= ENV['NETWORK'] %>
  volumes:
    - /docker/containers/traefik/letsencrypt/acme.json:/letsencrypt/acme.json
    - /docker/containers/traefik/rules:/rules
    - /docker/containers/traefik/logs:/logs
  memory: 512m
  args:
    accesslog: true
    accesslog.format: json
    entryPoints.web.address: :80
    entryPoints.websecure.address: :443
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.email: <%= ENV['EMAIL'] %>
    certificatesResolvers.letsencrypt.acme.storage: /letsencrypt/acme.json
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web
    # entrypoints.https.forwardedHeaders.trustedIPs: <%= ENV['CLOUDFLARE_IPS'] %>
    # accessLog.bufferingSize: 100
    # accessLog.filePath: /logs/access.log
    # accessLog.filters.statusCodes: 204-299,400-499,500-599
    # api: true
    # api.dashboard: true
    # global.checkNewVersion: true
    # global.sendAnonymousUsage: false
    # log: true
    # log.filePath: /logs/traefik.log
    # log.level: INFO
    # providers.docker: true
    # providers.docker.endpoint: unix:///var/run/docker.sock
    # providers.docker.exposedByDefault: false
    # providers.docker.network: <%= ENV['NETWORK'] %>
    # providers.docker.swarmMode: false
    # providers.file.directory: /rules
    # providers.file.watch: true
